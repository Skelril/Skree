/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables;


import com.skelril.skree.db.schema.Keys;
import com.skelril.skree.db.schema.McDb;
import com.skelril.skree.db.schema.tables.records.RegionsRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Regions extends TableImpl<RegionsRecord> {

	private static final long serialVersionUID = 865549251;

	/**
	 * The reference instance of <code>mc_db.regions</code>
	 */
	public static final Regions REGIONS = new Regions();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RegionsRecord> getRecordType() {
		return RegionsRecord.class;
	}

	/**
	 * The column <code>mc_db.regions.id</code>.
	 */
	public final TableField<RegionsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.regions.uuid</code>.
	 */
	public final TableField<RegionsRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

	/**
	 * The column <code>mc_db.regions.world_id</code>.
	 */
	public final TableField<RegionsRecord, Integer> WORLD_ID = createField("world_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.regions.x</code>.
	 */
	public final TableField<RegionsRecord, Double> X = createField("x", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>mc_db.regions.y</code>.
	 */
	public final TableField<RegionsRecord, Double> Y = createField("y", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>mc_db.regions.z</code>.
	 */
	public final TableField<RegionsRecord, Double> Z = createField("z", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>mc_db.regions.name</code>.
	 */
	public final TableField<RegionsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>mc_db.regions.power</code>.
	 */
	public final TableField<RegionsRecord, Integer> POWER = createField("power", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>mc_db.regions</code> table reference
	 */
	public Regions() {
		this("regions", null);
	}

	/**
	 * Create an aliased <code>mc_db.regions</code> table reference
	 */
	public Regions(String alias) {
		this(alias, REGIONS);
	}

	private Regions(String alias, Table<RegionsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Regions(String alias, Table<RegionsRecord> aliased, Field<?>[] parameters) {
		super(alias, McDb.MC_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RegionsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_REGIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RegionsRecord> getPrimaryKey() {
		return Keys.KEY_REGIONS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RegionsRecord>> getKeys() {
		return Arrays.<UniqueKey<RegionsRecord>>asList(Keys.KEY_REGIONS_PRIMARY, Keys.KEY_REGIONS_UUID, Keys.KEY_REGIONS_WORLD_ID_X_Y_Z);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RegionsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RegionsRecord, ?>>asList(Keys.FK_WORLD_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Regions as(String alias) {
		return new Regions(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Regions rename(String name) {
		return new Regions(name, null);
	}
}
