/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables;


import com.skelril.skree.db.schema.Keys;
import com.skelril.skree.db.schema.McDb;
import com.skelril.skree.db.schema.tables.records.RegionPointsRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegionPoints extends TableImpl<RegionPointsRecord> {

	private static final long serialVersionUID = 1933760446;

	/**
	 * The reference instance of <code>mc_db.region_points</code>
	 */
	public static final RegionPoints REGION_POINTS = new RegionPoints();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RegionPointsRecord> getRecordType() {
		return RegionPointsRecord.class;
	}

	/**
	 * The column <code>mc_db.region_points.id</code>.
	 */
	public final TableField<RegionPointsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.region_points.region_id</code>.
	 */
	public final TableField<RegionPointsRecord, Integer> REGION_ID = createField("region_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.region_points.x</code>.
	 */
	public final TableField<RegionPointsRecord, Double> X = createField("x", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>mc_db.region_points.y</code>.
	 */
	public final TableField<RegionPointsRecord, Double> Y = createField("y", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>mc_db.region_points.z</code>.
	 */
	public final TableField<RegionPointsRecord, Double> Z = createField("z", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * Create a <code>mc_db.region_points</code> table reference
	 */
	public RegionPoints() {
		this("region_points", null);
	}

	/**
	 * Create an aliased <code>mc_db.region_points</code> table reference
	 */
	public RegionPoints(String alias) {
		this(alias, REGION_POINTS);
	}

	private RegionPoints(String alias, Table<RegionPointsRecord> aliased) {
		this(alias, aliased, null);
	}

	private RegionPoints(String alias, Table<RegionPointsRecord> aliased, Field<?>[] parameters) {
		super(alias, McDb.MC_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RegionPointsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_REGION_POINTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RegionPointsRecord> getPrimaryKey() {
		return Keys.KEY_REGION_POINTS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RegionPointsRecord>> getKeys() {
		return Arrays.<UniqueKey<RegionPointsRecord>>asList(Keys.KEY_REGION_POINTS_PRIMARY, Keys.KEY_REGION_POINTS_X_Y_Z);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RegionPointsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RegionPointsRecord, ?>>asList(Keys.FK_REGION_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RegionPoints as(String alias) {
		return new RegionPoints(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RegionPoints rename(String name) {
		return new RegionPoints(name, null);
	}
}
