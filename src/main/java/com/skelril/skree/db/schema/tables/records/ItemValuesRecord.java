/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables.records;


import com.skelril.skree.db.schema.tables.ItemValues;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemValuesRecord extends UpdatableRecordImpl<ItemValuesRecord> implements Record3<Integer, Integer, BigDecimal> {

	private static final long serialVersionUID = -304972609;

	/**
	 * Setter for <code>mc_db.item_values.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>mc_db.item_values.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mc_db.item_values.item_id</code>.
	 */
	public void setItemId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>mc_db.item_values.item_id</code>.
	 */
	public Integer getItemId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>mc_db.item_values.price</code>.
	 */
	public void setPrice(BigDecimal value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>mc_db.item_values.price</code>.
	 */
	public BigDecimal getPrice() {
		return (BigDecimal) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, BigDecimal> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, Integer, BigDecimal> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return ItemValues.ITEM_VALUES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return ItemValues.ITEM_VALUES.ITEM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field3() {
		return ItemValues.ITEM_VALUES.PRICE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getItemId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value3() {
		return getPrice();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemValuesRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemValuesRecord value2(Integer value) {
		setItemId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemValuesRecord value3(BigDecimal value) {
		setPrice(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemValuesRecord values(Integer value1, Integer value2, BigDecimal value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ItemValuesRecord
	 */
	public ItemValuesRecord() {
		super(ItemValues.ITEM_VALUES);
	}

	/**
	 * Create a detached, initialised ItemValuesRecord
	 */
	public ItemValuesRecord(Integer id, Integer itemId, BigDecimal price) {
		super(ItemValues.ITEM_VALUES);

		setValue(0, id);
		setValue(1, itemId);
		setValue(2, price);
	}
}
