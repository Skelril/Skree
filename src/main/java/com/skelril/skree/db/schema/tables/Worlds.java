/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables;


import com.skelril.skree.db.schema.Keys;
import com.skelril.skree.db.schema.McDb;
import com.skelril.skree.db.schema.tables.records.WorldsRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Worlds extends TableImpl<WorldsRecord> {

	private static final long serialVersionUID = 1613653364;

	/**
	 * The reference instance of <code>mc_db.worlds</code>
	 */
	public static final Worlds WORLDS = new Worlds();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<WorldsRecord> getRecordType() {
		return WorldsRecord.class;
	}

	/**
	 * The column <code>mc_db.worlds.id</code>.
	 */
	public final TableField<WorldsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.worlds.name</code>.
	 */
	public final TableField<WorldsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * Create a <code>mc_db.worlds</code> table reference
	 */
	public Worlds() {
		this("worlds", null);
	}

	/**
	 * Create an aliased <code>mc_db.worlds</code> table reference
	 */
	public Worlds(String alias) {
		this(alias, WORLDS);
	}

	private Worlds(String alias, Table<WorldsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Worlds(String alias, Table<WorldsRecord> aliased, Field<?>[] parameters) {
		super(alias, McDb.MC_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<WorldsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_WORLDS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<WorldsRecord> getPrimaryKey() {
		return Keys.KEY_WORLDS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<WorldsRecord>> getKeys() {
		return Arrays.<UniqueKey<WorldsRecord>>asList(Keys.KEY_WORLDS_PRIMARY, Keys.KEY_WORLDS_NAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Worlds as(String alias) {
		return new Worlds(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Worlds rename(String name) {
		return new Worlds(name, null);
	}
}
