/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables;


import com.skelril.skree.db.schema.Keys;
import com.skelril.skree.db.schema.McDb;
import com.skelril.skree.db.schema.tables.records.PortalsRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Portals extends TableImpl<PortalsRecord> {

	private static final long serialVersionUID = 2060233455;

	/**
	 * The reference instance of <code>mc_db.portals</code>
	 */
	public static final Portals PORTALS = new Portals();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PortalsRecord> getRecordType() {
		return PortalsRecord.class;
	}

	/**
	 * The column <code>mc_db.portals.id</code>.
	 */
	public final TableField<PortalsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.portals.from_world_id</code>.
	 */
	public final TableField<PortalsRecord, Integer> FROM_WORLD_ID = createField("from_world_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.portals.player_id</code>.
	 */
	public final TableField<PortalsRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.portals.x</code>.
	 */
	public final TableField<PortalsRecord, Integer> X = createField("x", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.portals.y</code>.
	 */
	public final TableField<PortalsRecord, Integer> Y = createField("y", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.portals.z</code>.
	 */
	public final TableField<PortalsRecord, Integer> Z = createField("z", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>mc_db.portals</code> table reference
	 */
	public Portals() {
		this("portals", null);
	}

	/**
	 * Create an aliased <code>mc_db.portals</code> table reference
	 */
	public Portals(String alias) {
		this(alias, PORTALS);
	}

	private Portals(String alias, Table<PortalsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Portals(String alias, Table<PortalsRecord> aliased, Field<?>[] parameters) {
		super(alias, McDb.MC_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PortalsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PORTALS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PortalsRecord> getPrimaryKey() {
		return Keys.KEY_PORTALS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PortalsRecord>> getKeys() {
		return Arrays.<UniqueKey<PortalsRecord>>asList(Keys.KEY_PORTALS_PRIMARY, Keys.KEY_PORTALS_PLAYER_FROM_WORLD);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PortalsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PortalsRecord, ?>>asList(Keys.FK_PORTAL_FROM_WORLD_ID, Keys.FK_PORTAL_PLAYER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Portals as(String alias) {
		return new Portals(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Portals rename(String name) {
		return new Portals(name, null);
	}
}
