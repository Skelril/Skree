/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables;


import com.skelril.skree.db.schema.Keys;
import com.skelril.skree.db.schema.McDb;
import com.skelril.skree.db.schema.tables.records.ModifiersRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Modifiers extends TableImpl<ModifiersRecord> {

	private static final long serialVersionUID = -1120631723;

	/**
	 * The reference instance of <code>mc_db.modifiers</code>
	 */
	public static final Modifiers MODIFIERS = new Modifiers();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ModifiersRecord> getRecordType() {
		return ModifiersRecord.class;
	}

	/**
	 * The column <code>mc_db.modifiers.id</code>.
	 */
	public final TableField<ModifiersRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.modifiers.name</code>.
	 */
	public final TableField<ModifiersRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mc_db.modifiers.expirey</code>.
	 */
	public final TableField<ModifiersRecord, Timestamp> EXPIREY = createField("expirey", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>mc_db.modifiers</code> table reference
	 */
	public Modifiers() {
		this("modifiers", null);
	}

	/**
	 * Create an aliased <code>mc_db.modifiers</code> table reference
	 */
	public Modifiers(String alias) {
		this(alias, MODIFIERS);
	}

	private Modifiers(String alias, Table<ModifiersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Modifiers(String alias, Table<ModifiersRecord> aliased, Field<?>[] parameters) {
		super(alias, McDb.MC_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ModifiersRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MODIFIERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ModifiersRecord> getPrimaryKey() {
		return Keys.KEY_MODIFIERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ModifiersRecord>> getKeys() {
		return Arrays.<UniqueKey<ModifiersRecord>>asList(Keys.KEY_MODIFIERS_PRIMARY, Keys.KEY_MODIFIERS_NAME_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Modifiers as(String alias) {
		return new Modifiers(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Modifiers rename(String name) {
		return new Modifiers(name, null);
	}
}
