/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables;


import com.skelril.skree.db.schema.Keys;
import com.skelril.skree.db.schema.McDb;
import com.skelril.skree.db.schema.tables.records.ItemIdRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemId extends TableImpl<ItemIdRecord> {

	private static final long serialVersionUID = 495896608;

	/**
	 * The reference instance of <code>mc_db.item_id</code>
	 */
	public static final ItemId ITEM_ID = new ItemId();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ItemIdRecord> getRecordType() {
		return ItemIdRecord.class;
	}

	/**
	 * The column <code>mc_db.item_id.id</code>.
	 */
	public final TableField<ItemIdRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.item_id.mc_id</code>.
	 */
	public final TableField<ItemIdRecord, String> MC_ID = createField("mc_id", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>mc_db.item_id.variant</code>.
	 */
	public final TableField<ItemIdRecord, String> VARIANT = createField("variant", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * Create a <code>mc_db.item_id</code> table reference
	 */
	public ItemId() {
		this("item_id", null);
	}

	/**
	 * Create an aliased <code>mc_db.item_id</code> table reference
	 */
	public ItemId(String alias) {
		this(alias, ITEM_ID);
	}

	private ItemId(String alias, Table<ItemIdRecord> aliased) {
		this(alias, aliased, null);
	}

	private ItemId(String alias, Table<ItemIdRecord> aliased, Field<?>[] parameters) {
		super(alias, McDb.MC_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ItemIdRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ITEM_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ItemIdRecord> getPrimaryKey() {
		return Keys.KEY_ITEM_ID_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ItemIdRecord>> getKeys() {
		return Arrays.<UniqueKey<ItemIdRecord>>asList(Keys.KEY_ITEM_ID_PRIMARY, Keys.KEY_ITEM_ID_ITEM);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemId as(String alias) {
		return new ItemId(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ItemId rename(String name) {
		return new ItemId(name, null);
	}
}
