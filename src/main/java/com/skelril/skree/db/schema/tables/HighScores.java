/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables;


import com.skelril.skree.db.schema.Keys;
import com.skelril.skree.db.schema.McDb;
import com.skelril.skree.db.schema.tables.records.HighScoresRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HighScores extends TableImpl<HighScoresRecord> {

	private static final long serialVersionUID = 1134220313;

	/**
	 * The reference instance of <code>mc_db.high_scores</code>
	 */
	public static final HighScores HIGH_SCORES = new HighScores();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<HighScoresRecord> getRecordType() {
		return HighScoresRecord.class;
	}

	/**
	 * The column <code>mc_db.high_scores.id</code>.
	 */
	public final TableField<HighScoresRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.high_scores.score_type_id</code>.
	 */
	public final TableField<HighScoresRecord, Integer> SCORE_TYPE_ID = createField("score_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.high_scores.player_id</code>.
	 */
	public final TableField<HighScoresRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.high_scores.value</code>.
	 */
	public final TableField<HighScoresRecord, Integer> VALUE = createField("value", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>mc_db.high_scores</code> table reference
	 */
	public HighScores() {
		this("high_scores", null);
	}

	/**
	 * Create an aliased <code>mc_db.high_scores</code> table reference
	 */
	public HighScores(String alias) {
		this(alias, HIGH_SCORES);
	}

	private HighScores(String alias, Table<HighScoresRecord> aliased) {
		this(alias, aliased, null);
	}

	private HighScores(String alias, Table<HighScoresRecord> aliased, Field<?>[] parameters) {
		super(alias, McDb.MC_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<HighScoresRecord, Integer> getIdentity() {
		return Keys.IDENTITY_HIGH_SCORES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<HighScoresRecord> getPrimaryKey() {
		return Keys.KEY_HIGH_SCORES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<HighScoresRecord>> getKeys() {
		return Arrays.<UniqueKey<HighScoresRecord>>asList(Keys.KEY_HIGH_SCORES_PRIMARY, Keys.KEY_HIGH_SCORES_PLAYER_SCORE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<HighScoresRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<HighScoresRecord, ?>>asList(Keys.FK_HIGH_SCORE_PLAYER);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HighScores as(String alias) {
		return new HighScores(alias, this);
	}

	/**
	 * Rename this table
	 */
	public HighScores rename(String name) {
		return new HighScores(name, null);
	}
}
