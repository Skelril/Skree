/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema;


import com.skelril.skree.db.schema.tables.ItemAliases;
import com.skelril.skree.db.schema.tables.ItemData;
import com.skelril.skree.db.schema.tables.Modifiers;
import com.skelril.skree.db.schema.tables.records.ItemAliasesRecord;
import com.skelril.skree.db.schema.tables.records.ItemDataRecord;
import com.skelril.skree.db.schema.tables.records.ModifiersRecord;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>mc_db</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<ItemAliasesRecord, Integer> IDENTITY_ITEM_ALIASES = Identities0.IDENTITY_ITEM_ALIASES;
	public static final Identity<ItemDataRecord, Integer> IDENTITY_ITEM_DATA = Identities0.IDENTITY_ITEM_DATA;
	public static final Identity<ModifiersRecord, Integer> IDENTITY_MODIFIERS = Identities0.IDENTITY_MODIFIERS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<ItemAliasesRecord> KEY_ITEM_ALIASES_PRIMARY = UniqueKeys0.KEY_ITEM_ALIASES_PRIMARY;
	public static final UniqueKey<ItemAliasesRecord> KEY_ITEM_ALIASES_ALIAS_UNIQUE = UniqueKeys0.KEY_ITEM_ALIASES_ALIAS_UNIQUE;
	public static final UniqueKey<ItemDataRecord> KEY_ITEM_DATA_PRIMARY = UniqueKeys0.KEY_ITEM_DATA_PRIMARY;
	public static final UniqueKey<ItemDataRecord> KEY_ITEM_DATA_ITEM = UniqueKeys0.KEY_ITEM_DATA_ITEM;
	public static final UniqueKey<ItemDataRecord> KEY_ITEM_DATA_PRIMARY_ALIAS_UNIQUE = UniqueKeys0.KEY_ITEM_DATA_PRIMARY_ALIAS_UNIQUE;
	public static final UniqueKey<ModifiersRecord> KEY_MODIFIERS_PRIMARY = UniqueKeys0.KEY_MODIFIERS_PRIMARY;
	public static final UniqueKey<ModifiersRecord> KEY_MODIFIERS_NAME_UNIQUE = UniqueKeys0.KEY_MODIFIERS_NAME_UNIQUE;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<ItemAliasesRecord, ItemDataRecord> ITEM_ALIASES_IBFK_1 = ForeignKeys0.ITEM_ALIASES_IBFK_1;
	public static final ForeignKey<ItemDataRecord, ItemAliasesRecord> ITEM_DATA_IBFK_1 = ForeignKeys0.ITEM_DATA_IBFK_1;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<ItemAliasesRecord, Integer> IDENTITY_ITEM_ALIASES = createIdentity(ItemAliases.ITEM_ALIASES, ItemAliases.ITEM_ALIASES.ID);
		public static Identity<ItemDataRecord, Integer> IDENTITY_ITEM_DATA = createIdentity(ItemData.ITEM_DATA, ItemData.ITEM_DATA.ID);
		public static Identity<ModifiersRecord, Integer> IDENTITY_MODIFIERS = createIdentity(Modifiers.MODIFIERS, Modifiers.MODIFIERS.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<ItemAliasesRecord> KEY_ITEM_ALIASES_PRIMARY = createUniqueKey(ItemAliases.ITEM_ALIASES, ItemAliases.ITEM_ALIASES.ID);
		public static final UniqueKey<ItemAliasesRecord> KEY_ITEM_ALIASES_ALIAS_UNIQUE = createUniqueKey(ItemAliases.ITEM_ALIASES, ItemAliases.ITEM_ALIASES.ALIAS);
		public static final UniqueKey<ItemDataRecord> KEY_ITEM_DATA_PRIMARY = createUniqueKey(ItemData.ITEM_DATA, ItemData.ITEM_DATA.ID);
		public static final UniqueKey<ItemDataRecord> KEY_ITEM_DATA_ITEM = createUniqueKey(ItemData.ITEM_DATA, ItemData.ITEM_DATA.MC_ID, ItemData.ITEM_DATA.VARIANT);
		public static final UniqueKey<ItemDataRecord> KEY_ITEM_DATA_PRIMARY_ALIAS_UNIQUE = createUniqueKey(ItemData.ITEM_DATA, ItemData.ITEM_DATA.PRIMARY_ALIAS);
		public static final UniqueKey<ModifiersRecord> KEY_MODIFIERS_PRIMARY = createUniqueKey(Modifiers.MODIFIERS, Modifiers.MODIFIERS.ID);
		public static final UniqueKey<ModifiersRecord> KEY_MODIFIERS_NAME_UNIQUE = createUniqueKey(Modifiers.MODIFIERS, Modifiers.MODIFIERS.NAME);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<ItemAliasesRecord, ItemDataRecord> ITEM_ALIASES_IBFK_1 = createForeignKey(com.skelril.skree.db.schema.Keys.KEY_ITEM_DATA_PRIMARY, ItemAliases.ITEM_ALIASES, ItemAliases.ITEM_ALIASES.ITEM_ID);
		public static final ForeignKey<ItemDataRecord, ItemAliasesRecord> ITEM_DATA_IBFK_1 = createForeignKey(com.skelril.skree.db.schema.Keys.KEY_ITEM_ALIASES_PRIMARY, ItemData.ITEM_DATA, ItemData.ITEM_DATA.PRIMARY_ALIAS);
	}
}
