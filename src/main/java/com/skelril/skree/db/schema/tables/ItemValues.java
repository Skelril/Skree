/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables;


import com.skelril.skree.db.schema.Keys;
import com.skelril.skree.db.schema.McDb;
import com.skelril.skree.db.schema.tables.records.ItemValuesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemValues extends TableImpl<ItemValuesRecord> {

	private static final long serialVersionUID = 274050287;

	/**
	 * The reference instance of <code>mc_db.item_values</code>
	 */
	public static final ItemValues ITEM_VALUES = new ItemValues();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ItemValuesRecord> getRecordType() {
		return ItemValuesRecord.class;
	}

	/**
	 * The column <code>mc_db.item_values.id</code>.
	 */
	public final TableField<ItemValuesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.item_values.item_id</code>.
	 */
	public final TableField<ItemValuesRecord, Integer> ITEM_ID = createField("item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mc_db.item_values.price</code>.
	 */
	public final TableField<ItemValuesRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL.precision(12, 9).nullable(false), this, "");

	/**
	 * Create a <code>mc_db.item_values</code> table reference
	 */
	public ItemValues() {
		this("item_values", null);
	}

	/**
	 * Create an aliased <code>mc_db.item_values</code> table reference
	 */
	public ItemValues(String alias) {
		this(alias, ITEM_VALUES);
	}

	private ItemValues(String alias, Table<ItemValuesRecord> aliased) {
		this(alias, aliased, null);
	}

	private ItemValues(String alias, Table<ItemValuesRecord> aliased, Field<?>[] parameters) {
		super(alias, McDb.MC_DB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ItemValuesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ITEM_VALUES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ItemValuesRecord> getPrimaryKey() {
		return Keys.KEY_ITEM_VALUES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ItemValuesRecord>> getKeys() {
		return Arrays.<UniqueKey<ItemValuesRecord>>asList(Keys.KEY_ITEM_VALUES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ItemValuesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ItemValuesRecord, ?>>asList(Keys.FK_ITEM_VALUES_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemValues as(String alias) {
		return new ItemValues(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ItemValues rename(String name) {
		return new ItemValues(name, null);
	}
}
