/**
 * This class is generated by jOOQ
 */
package com.skelril.skree.db.schema.tables.records;


import com.skelril.skree.db.schema.tables.ItemData;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemDataRecord extends UpdatableRecordImpl<ItemDataRecord> implements Record5<Integer, String, String, BigDecimal, Integer> {

	private static final long serialVersionUID = 1683241047;

	/**
	 * Setter for <code>mc_db.item_data.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>mc_db.item_data.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mc_db.item_data.mc_id</code>.
	 */
	public void setMcId(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>mc_db.item_data.mc_id</code>.
	 */
	public String getMcId() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mc_db.item_data.variant</code>.
	 */
	public void setVariant(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>mc_db.item_data.variant</code>.
	 */
	public String getVariant() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mc_db.item_data.value</code>.
	 */
	public void setValue(BigDecimal value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>mc_db.item_data.value</code>.
	 */
	public BigDecimal getValue() {
		return (BigDecimal) getValue(3);
	}

	/**
	 * Setter for <code>mc_db.item_data.primary alias</code>.
	 */
	public void setPrimary_alias(Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>mc_db.item_data.primary alias</code>.
	 */
	public Integer getPrimary_alias() {
		return (Integer) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String, BigDecimal, Integer> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String, BigDecimal, Integer> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return ItemData.ITEM_DATA.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return ItemData.ITEM_DATA.MC_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return ItemData.ITEM_DATA.VARIANT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field4() {
		return ItemData.ITEM_DATA.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field5() {
		return ItemData.ITEM_DATA.PRIMARY_ALIAS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getMcId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getVariant();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value4() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value5() {
		return getPrimary_alias();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemDataRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemDataRecord value2(String value) {
		setMcId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemDataRecord value3(String value) {
		setVariant(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemDataRecord value4(BigDecimal value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemDataRecord value5(Integer value) {
		setPrimary_alias(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ItemDataRecord values(Integer value1, String value2, String value3, BigDecimal value4, Integer value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ItemDataRecord
	 */
	public ItemDataRecord() {
		super(ItemData.ITEM_DATA);
	}

	/**
	 * Create a detached, initialised ItemDataRecord
	 */
	public ItemDataRecord(Integer id, String mcId, String variant, BigDecimal value, Integer primary_alias) {
		super(ItemData.ITEM_DATA);

		setValue(0, id);
		setValue(1, mcId);
		setValue(2, variant);
		setValue(3, value);
		setValue(4, primary_alias);
	}
}
