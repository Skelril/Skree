// These imports are needed further down
// -------------------------------------
import org.jooq.util.GenerationTool

import javax.xml.bind.JAXB

apply plugin: 'java'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sonatype-snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'org.jooq:jooq-codegen:3.6.0'
        classpath group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.3.+'
    }
}

apply plugin: 'checkstyle'
apply plugin: 'net.minecraftforge.gradle.forge'

configurations {
    shade
    compile.extendsFrom shade
}

minecraft {
    version = "1.11.2-13.20.0.2237"
    runDir = "run"
    mappings = "snapshot_20170221"
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        name 'Skelril Repository'
        url 'http://service.skelril.com/maven/'
    }
    maven {
        name 'Sponge maven repo'
        url 'http://repo.spongepowered.org/maven'
    }
    maven {
        name 'sk89q-repo'
        url 'http://maven.sk89q.com/repo/'
    }

    mavenLocal()
}

dependencies {
    compile group: 'org.jooq', name: 'jooq', version: '3.9.2'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '4.1.2'
    compile group: 'com.skelril', name: 'Open Boss', version: '2.0-SNAPSHOT'
    compile group: 'com.nearce', name: 'GameChatterServer-Sponge', version: '1.0-SNAPSHOT'
    compile group: 'com.sk89q.worldedit', name: 'worldedit-sponge', version: '7.0.0-SNAPSHOT'
    compile group: 'org.spongepowered', name: 'spongeapi', version: '6.+'

    shade group: 'com.mitchellbosecke', name: 'pebble', version: '2.1.0'

    runtime group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.3.3'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
version = '1.0'

sourceSets {
    main {
        resources.srcDirs = ["assets/Primary", "src/main/resources"]
    }
}

processResources {
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        attributes 'FMLAT': 'FMLSkree_at.cfg'
    }
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

tasks.withType(Checkstyle) {
    exclude '**/skree/db/schema/**'
}

task codegen << {
    println 'Generating new schema classes...'
    def writer = new StringWriter()
    def xml = new groovy.xml.MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.6.0.xsd') {
        jdbc() {
            driver('org.mariadb.jdbc.Driver')
            url('jdbc:mariadb://localhost:3306')
            user('mc_db_dev')
            password('mc_db_dev')
        }
        generator() {
            database() {
                name('org.jooq.util.mariadb.MariaDBDatabase')
                inputSchema('mc_db')
            }
            generate() {
            }
            target() {
                packageName('com.skelril.skree.db.schema')
                directory('src/main/java')
            }
        }
    }

    GenerationTool.main(
            JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
    )
}
